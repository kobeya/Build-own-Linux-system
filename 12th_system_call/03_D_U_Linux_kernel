本文主要参考<深入理解Linux内核>

书本笔记：
	1，汇编指令int $0x80触发软中断128陷入内核，退出也是汇编指令iret返回到用户态。
	2，汇编指令sysenter进入内核，汇编指令sysexit退出返回用户。


	3，汇编指令int $0x80触发软中断128的解释：
		int $0x80实际就是中断向量128,0x80是十六进制。这个向量对应内核入口点。
		在内核初始化期间，调用的函数trap_init()，建立对应于向量128的中断描述符表表项。
		
		这个汇编指令到底做什么事情？
		这对应与128向量表表项的内存，在内核启动的时候已经通过trap_init初始化了。
		这个汇编指令触发一个软中断，让进程陷入内核态，并从地址system_call处开始执行指令

这部分没有完成，涉及到更深入的细节，后续有需求可以回来跟踪
