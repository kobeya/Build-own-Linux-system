【为不同类型的任务分配CPU核资源】
	我们知道现在手机厂商都是通过使用大小核来降低设备的功耗
	大小核的原理我很早之前在内存管理的文章就有描述，I/O消耗性的任务不需要非常多的
	CPU计算资源，比如我们DMA传输的时候，只要CPU响应DMA操作后，剩下的时候就不管了，
	那么我们完全可以用一个小核来做这个事情，它主要负责响应任务，计算的事情留给大核来处理，
	这样就做到比如4小核心，4大核心实现7.×核心的性能，4.×核心的功耗。


	同样，在RK3399中，我们也可以指定任务分配不同的CPU核资源


	RK3399， 总共6核，0~3是小核，4~5是大核。

	在init的脚本中可以添加绑定大小核


【指定线程绑定大核】

	1，为什么指定线程而不是指定进程呢？
	答：
		如果进程创建多与2个以上的线程，而且线程之间存在互斥等待的情况，
		反而导致该进程效率更低。简单的说比如进程里面有AB两个线程，A在等待B释放资源
		如果此刻你绑定AB同时到大核中，大核在执行A，但是不管你大核性能再好也必须等待
		B释放资源，然后B线程又刚好做一些与CPU性能关系不大的事情，这样就浪费了大核资源。

		所以，一般情况下，我们应该绑定某个进程中，对CPU占用率高的线程
	2，怎么查看CPU占用率高的线程？
	答：
		我在进程、线程章节中的有描述，top看到的是进程pid,如果是多线程的进程，那么就会看到
		tpid,这是一个假象，所以我们可以用top -H查看进程中的线程pid

	3，怎么绑定？
		1）taskset工具
		2）直接在写代码的时候，就调用设置CPU亲和力的底层API
			sched_setaffinity
			在编写多线程代码的时候，根绝线程可能需要的情况绑定指定的CPU



